kind: ConfigMap
apiVersion: v1
metadata:
  name: domains-django-test-conf
data:
  HOST: "domains.test.glauca.digital,domains-test-nginx"
  DJANGO_SETTINGS_MODULE: as207960_domains.settings
  EXTERNAL_URL: "https://domains.test.glauca.digital"
  RP_ID: "domains.test.glauca.digital"
  SENTRY_ENVIRONMENT: "test"
  KEYCLOAK_SERVER_URL: "https://sso.as207960.net"
  KEYCLOAK_REALM: test
  KEYCLOAK_SCOPES: "openid email profile offline_access"
  KEYCLOAK_CLIENT_ID: "domains"
  DB_HOST: "cockroachdb"
  DB_NAME: "domains-test"
  BILLING_URL: "http://billing-nginx-test"
  HEXDNS_URL: "https://dns.glauca.digital"
  FEEDBACK_URL: "none"
  EPP_PROXY_ADDR: "epp-proxy-test-primary:50051"
  EPP_PROXY_CA: "/ca-cert/ca.pem"
  EMAIL_HOST: "mx.postal.as207960.net"
  EMAIL_HOST_USER: "apikey"
  EMAIL_PORT: "25"
  EMAIL_FROM: "=?UTF-8?q?Glauca=20Domains=20[TEST]?= <domains-test@glauca.digital>"
  GCHAT_PROJECT_ID: "1045619794257"
  GCHAT_SERVICE_ACCOUNT_FILE: "/google-creds/sa.json"
  PRIV_KEY_LOCATION: "/privkey/privkey.pem"
  RESOLVER_ADDR: "hexdns-unbound"
  RESOLVER_PORT: "5053"
  POSTAL_PUBLIC_KEY: >-
    MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQChELn1Fkauo6bduyGeXNca/z27OYNMd85JZMlNiycfFHaAXzgPd53OKVSbyzBuILFPYmzkfaF
    uOCW2qgvFd8cAye6qLsUAqEetiuRTPpAysX3hss1TqIML51kb0ADTmylKi3Hr553qrDy9AEMFmvaKnTH8o0YFozGk0QtlmiLtXQIDAQAB
  ISNIC_CONTACT_EMAIL: isnic-auto-ote@as207960.ltd.uk
  S3_ENDPOINT: "https://s3.as207960.net"
  S3_REGION: "garage"
  S3_BUCKET: "domains-django-test"
  S3_STATIC_BUCKET: "domains-django-test-static"
  S3_ACCESS_KEY_ID: "GK6831f7679a35963ee5dc1a4a"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: domains-django-test
  labels:
    app: domains-test
    part: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: domains-test
      part: django
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: domains-test
        part: django
    spec:
      volumes:
        - name: ca-cert
          configMap:
            name: epp-ca
        - name: google-creds
          secret:
            secretName: domains-test-google-creds
        - name: privkey
          secret:
            secretName: domains-test-jwt-priv
      initContainers:
        - name: django
          image: as207960/domains-django:(version)
          imagePullPolicy: Always
          command: ["sh", "-c", "python3 manage.py collectstatic --noinput && python3 manage.py migrate && python3 manage.py sync-keycloak"]
          volumeMounts:
            - mountPath: "/ca-cert/"
              name: ca-cert
            - mountPath: "/google-creds/"
              name: google-creds
            - mountPath: "/privkey/"
              name: privkey
          envFrom:
            - configMapRef:
                name: domains-django-test-conf
            - secretRef:
                name: domains-db-test-creds
              prefix: "DB_"
            - secretRef:
                name: domains-django-test-secret
            - secretRef:
                name: domains-test-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: domains-test-email
              prefix: "EMAIL_"
            - secretRef:
                name: domains-test-celery
              prefix: "CELERY_"
            - secretRef:
                name: domains-test-rpc
            - secretRef:
                name: domains-test-s3
      containers:
        - name: gunicorn
          image: as207960/domains-django:(version)
          imagePullPolicy: Always
          command: ["gunicorn", "-w", "8", "-b", "[::]:8000", "--forwarded-allow-ips", "*", "--access-logfile", "-", "--timeout=90", "as207960_domains.wsgi:application"]
          ports:
            - containerPort: 8000
          volumeMounts:
            - mountPath: "/ca-cert/"
              name: ca-cert
            - mountPath: "/google-creds/"
              name: google-creds
            - mountPath: "/privkey/"
              name: privkey
          envFrom:
            - configMapRef:
                name: domains-django-test-conf
            - secretRef:
                name: domains-db-test-creds
              prefix: "DB_"
            - secretRef:
                name: domains-django-test-secret
            - secretRef:
                name: domains-test-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: domains-test-email
              prefix: "EMAIL_"
            - secretRef:
                name: domains-test-celery
              prefix: "CELERY_"
            - secretRef:
                name: domains-test-rpc
            - secretRef:
                name: domains-test-s3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: domains-test-django
spec:
  podSelector:
    matchLabels:
      app: domains-test
      part: django
  policyTypes:
  - Ingress
  ingress:
  - from:
      - namespaceSelector:
          matchLabels:
            app.kubernetes.io/name: ingress-nginx
        podSelector:
          matchLabels:
            app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: domains-celery-test
  labels:
    app: domains-test
    part: celery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: domains-test
      part: celery
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: domains-test
        part: celery
    spec:
      volumes:
        - name: ca-cert
          configMap:
            name: epp-ca
        - name: google-creds
          secret:
            secretName: domains-test-google-creds
        - name: privkey
          secret:
            secretName: domains-test-jwt-priv
      containers:
        - name: celery
          image: as207960/domains-django:(version)
          imagePullPolicy: Always
          command: ["celery", "-A", "as207960_domains", "worker", "--loglevel=INFO", "-c", "32"]
          volumeMounts:
            - mountPath: "/ca-cert/"
              name: ca-cert
            - mountPath: "/google-creds/"
              name: google-creds
            - mountPath: "/privkey/"
              name: privkey
          envFrom:
            - configMapRef:
                name: domains-django-test-conf
            - secretRef:
                name: domains-db-test-creds
              prefix: "DB_"
            - secretRef:
                name: domains-django-test-secret
            - secretRef:
                name: domains-test-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: domains-test-email
              prefix: "EMAIL_"
            - secretRef:
                name: domains-test-celery
              prefix: "CELERY_"
            - secretRef:
                name: domains-test-rpc
            - secretRef:
                name: domains-test-s3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: domains-test-celery
spec:
  podSelector:
    matchLabels:
      app: domains-test
      part: celery
  policyTypes:
  - Ingress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: domains-rpc-test
  labels:
    app: domains-test
    part: rpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: domains-test
      part: rpc
  template:
    metadata:
      annotations:
        cni.projectcalico.org/ipv6pools: "[\"default-ipv6-ippool\"]"
      labels:
        app: domains-test
        part: rpc
    spec:
      volumes:
        - name: ca-cert
          configMap:
            name: epp-ca
        - name: google-creds
          secret:
            secretName: domains-test-google-creds
        - name: privkey
          secret:
            secretName: domains-test-jwt-priv
      containers:
        - name: rpc
          image: as207960/domains-django:(version)
          imagePullPolicy: Always
          command: ["sh", "-c", "python3 manage.py run-rpc"]
          volumeMounts:
            - mountPath: "/ca-cert/"
              name: ca-cert
            - mountPath: "/google-creds/"
              name: google-creds
            - mountPath: "/privkey/"
              name: privkey
          envFrom:
            - configMapRef:
                name: domains-django-test-conf
            - secretRef:
                name: domains-db-test-creds
              prefix: "DB_"
            - secretRef:
                name: domains-django-test-secret
            - secretRef:
                name: domains-test-keycloak
              prefix: "KEYCLOAK_"
            - secretRef:
                name: domains-test-email
              prefix: "EMAIL_"
            - secretRef:
                name: domains-test-celery
              prefix: "CELERY_"
            - secretRef:
                name: domains-test-rpc
            - secretRef:
                name: domains-test-s3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: domains-test-rpc
spec:
  podSelector:
    matchLabels:
      app: domains-test
      part: rpc
  policyTypes:
  - Ingress
---
apiVersion: v1
kind: Service
metadata:
  name: domains-django-test
  labels:
    app: domains-test
    part: django
spec:
  selector:
    app: domains-test
    part: django
  ports:
    - port: 8000
      targetPort: 8000
