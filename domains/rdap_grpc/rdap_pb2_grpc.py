# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import rdap_pb2 as rdap__pb2


class RDAPStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DomainLookup = channel.unary_unary(
                '/rdap.RDAP/DomainLookup',
                request_serializer=rdap__pb2.LookupRequest.SerializeToString,
                response_deserializer=rdap__pb2.DomainResponse.FromString,
                )
        self.EntityLookup = channel.unary_unary(
                '/rdap.RDAP/EntityLookup',
                request_serializer=rdap__pb2.LookupRequest.SerializeToString,
                response_deserializer=rdap__pb2.EntityResponse.FromString,
                )
        self.NameServerLookup = channel.unary_unary(
                '/rdap.RDAP/NameServerLookup',
                request_serializer=rdap__pb2.LookupRequest.SerializeToString,
                response_deserializer=rdap__pb2.NameServerResponse.FromString,
                )
        self.DomainSearch = channel.unary_unary(
                '/rdap.RDAP/DomainSearch',
                request_serializer=rdap__pb2.DomainSearchRequest.SerializeToString,
                response_deserializer=rdap__pb2.DomainSearchResponse.FromString,
                )
        self.EntitySearch = channel.unary_unary(
                '/rdap.RDAP/EntitySearch',
                request_serializer=rdap__pb2.EntitySearchRequest.SerializeToString,
                response_deserializer=rdap__pb2.EntitySearchResponse.FromString,
                )
        self.NameServerSearch = channel.unary_unary(
                '/rdap.RDAP/NameServerSearch',
                request_serializer=rdap__pb2.NameServerSearchRequest.SerializeToString,
                response_deserializer=rdap__pb2.NameServerSearchResponse.FromString,
                )


class RDAPServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DomainLookup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityLookup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NameServerLookup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DomainSearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntitySearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NameServerSearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RDAPServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DomainLookup': grpc.unary_unary_rpc_method_handler(
                    servicer.DomainLookup,
                    request_deserializer=rdap__pb2.LookupRequest.FromString,
                    response_serializer=rdap__pb2.DomainResponse.SerializeToString,
            ),
            'EntityLookup': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityLookup,
                    request_deserializer=rdap__pb2.LookupRequest.FromString,
                    response_serializer=rdap__pb2.EntityResponse.SerializeToString,
            ),
            'NameServerLookup': grpc.unary_unary_rpc_method_handler(
                    servicer.NameServerLookup,
                    request_deserializer=rdap__pb2.LookupRequest.FromString,
                    response_serializer=rdap__pb2.NameServerResponse.SerializeToString,
            ),
            'DomainSearch': grpc.unary_unary_rpc_method_handler(
                    servicer.DomainSearch,
                    request_deserializer=rdap__pb2.DomainSearchRequest.FromString,
                    response_serializer=rdap__pb2.DomainSearchResponse.SerializeToString,
            ),
            'EntitySearch': grpc.unary_unary_rpc_method_handler(
                    servicer.EntitySearch,
                    request_deserializer=rdap__pb2.EntitySearchRequest.FromString,
                    response_serializer=rdap__pb2.EntitySearchResponse.SerializeToString,
            ),
            'NameServerSearch': grpc.unary_unary_rpc_method_handler(
                    servicer.NameServerSearch,
                    request_deserializer=rdap__pb2.NameServerSearchRequest.FromString,
                    response_serializer=rdap__pb2.NameServerSearchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rdap.RDAP', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RDAP(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DomainLookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rdap.RDAP/DomainLookup',
            rdap__pb2.LookupRequest.SerializeToString,
            rdap__pb2.DomainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EntityLookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rdap.RDAP/EntityLookup',
            rdap__pb2.LookupRequest.SerializeToString,
            rdap__pb2.EntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NameServerLookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rdap.RDAP/NameServerLookup',
            rdap__pb2.LookupRequest.SerializeToString,
            rdap__pb2.NameServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DomainSearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rdap.RDAP/DomainSearch',
            rdap__pb2.DomainSearchRequest.SerializeToString,
            rdap__pb2.DomainSearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EntitySearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rdap.RDAP/EntitySearch',
            rdap__pb2.EntitySearchRequest.SerializeToString,
            rdap__pb2.EntitySearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NameServerSearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rdap.RDAP/NameServerSearch',
            rdap__pb2.NameServerSearchRequest.SerializeToString,
            rdap__pb2.NameServerSearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
