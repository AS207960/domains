"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import common.common_pb2
import domain_common.domain_common_pb2
import eurid.eurid_pb2
import fee.fee_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import isnic.isnic_pb2
import keysys.keysys_pb2
import launch.launch_pb2
import personal_registration.personal_registration_pb2
import rgp.rgp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _DomainHostsType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DomainHostsTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DomainHostsType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    All: _DomainHostsType.ValueType  # 0
    Delegated: _DomainHostsType.ValueType  # 1
    Subordinate: _DomainHostsType.ValueType  # 2

class DomainHostsType(_DomainHostsType, metaclass=_DomainHostsTypeEnumTypeWrapper): ...

All: DomainHostsType.ValueType  # 0
Delegated: DomainHostsType.ValueType  # 1
Subordinate: DomainHostsType.ValueType  # 2
global___DomainHostsType = DomainHostsType

@typing_extensions.final
class Contact(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    id: builtins.str
    type: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "type", b"type"]) -> None: ...

global___Contact = Contact

@typing_extensions.final
class NameServer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOST_OBJ_FIELD_NUMBER: builtins.int
    HOST_NAME_FIELD_NUMBER: builtins.int
    ADDRESSES_FIELD_NUMBER: builtins.int
    EURID_IDN_FIELD_NUMBER: builtins.int
    host_obj: builtins.str
    host_name: builtins.str
    @property
    def addresses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[common.common_pb2.IPAddress]: ...
    @property
    def eurid_idn(self) -> eurid.eurid_pb2.IDN: ...
    def __init__(
        self,
        *,
        host_obj: builtins.str = ...,
        host_name: builtins.str = ...,
        addresses: collections.abc.Iterable[common.common_pb2.IPAddress] | None = ...,
        eurid_idn: eurid.eurid_pb2.IDN | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["eurid_idn", b"eurid_idn", "host_name", b"host_name", "host_obj", b"host_obj", "server", b"server"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["addresses", b"addresses", "eurid_idn", b"eurid_idn", "host_name", b"host_name", "host_obj", b"host_obj", "server", b"server"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["server", b"server"]) -> typing_extensions.Literal["host_obj", "host_name"] | None: ...

global___NameServer = NameServer

@typing_extensions.final
class DomainHosts(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HOSTS_FIELD_NUMBER: builtins.int
    hosts: global___DomainHostsType.ValueType
    def __init__(
        self,
        *,
        hosts: global___DomainHostsType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["hosts", b"hosts"]) -> None: ...

global___DomainHosts = DomainHosts

@typing_extensions.final
class DomainCheckRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    FEE_CHECK_FIELD_NUMBER: builtins.int
    LAUNCH_CHECK_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    KEYSYS_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def fee_check(self) -> fee.fee_pb2.FeeCheck: ...
    @property
    def launch_check(self) -> launch.launch_pb2.Phase: ...
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def keysys(self) -> keysys.keysys_pb2.DomainCheck: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        fee_check: fee.fee_pb2.FeeCheck | None = ...,
        launch_check: launch.launch_pb2.Phase | None = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        keysys: keysys.keysys_pb2.DomainCheck | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fee_check", b"fee_check", "keysys", b"keysys", "launch_check", b"launch_check", "registry_name", b"registry_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fee_check", b"fee_check", "keysys", b"keysys", "launch_check", b"launch_check", "name", b"name", "registry_name", b"registry_name"]) -> None: ...

global___DomainCheckRequest = DomainCheckRequest

@typing_extensions.final
class DomainClaimsCheckRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    LAUNCH_CHECK_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def launch_check(self) -> launch.launch_pb2.Phase: ...
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        launch_check: launch.launch_pb2.Phase | None = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["launch_check", b"launch_check", "registry_name", b"registry_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["launch_check", b"launch_check", "name", b"name", "registry_name", b"registry_name"]) -> None: ...

global___DomainClaimsCheckRequest = DomainClaimsCheckRequest

@typing_extensions.final
class DomainTrademarkCheckRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["registry_name", b"registry_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "registry_name", b"registry_name"]) -> None: ...

global___DomainTrademarkCheckRequest = DomainTrademarkCheckRequest

@typing_extensions.final
class DomainCheckReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AVAILABLE_FIELD_NUMBER: builtins.int
    REASON_FIELD_NUMBER: builtins.int
    FEE_CHECK_FIELD_NUMBER: builtins.int
    DONUTS_FEE_CHECK_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    CMD_RESP_FIELD_NUMBER: builtins.int
    EURID_IDN_FIELD_NUMBER: builtins.int
    EURID_DATA_FIELD_NUMBER: builtins.int
    available: builtins.bool
    @property
    def reason(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def fee_check(self) -> fee.fee_pb2.FeeCheckData: ...
    @property
    def donuts_fee_check(self) -> fee.fee_pb2.DonutsFeeData: ...
    registry_name: builtins.str
    @property
    def cmd_resp(self) -> common.common_pb2.CommandResponse: ...
    @property
    def eurid_idn(self) -> eurid.eurid_pb2.IDN: ...
    @property
    def eurid_data(self) -> eurid.eurid_pb2.DomainCheckData: ...
    def __init__(
        self,
        *,
        available: builtins.bool = ...,
        reason: google.protobuf.wrappers_pb2.StringValue | None = ...,
        fee_check: fee.fee_pb2.FeeCheckData | None = ...,
        donuts_fee_check: fee.fee_pb2.DonutsFeeData | None = ...,
        registry_name: builtins.str = ...,
        cmd_resp: common.common_pb2.CommandResponse | None = ...,
        eurid_idn: eurid.eurid_pb2.IDN | None = ...,
        eurid_data: eurid.eurid_pb2.DomainCheckData | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cmd_resp", b"cmd_resp", "donuts_fee_check", b"donuts_fee_check", "eurid_data", b"eurid_data", "eurid_idn", b"eurid_idn", "fee_check", b"fee_check", "reason", b"reason"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["available", b"available", "cmd_resp", b"cmd_resp", "donuts_fee_check", b"donuts_fee_check", "eurid_data", b"eurid_data", "eurid_idn", b"eurid_idn", "fee_check", b"fee_check", "reason", b"reason", "registry_name", b"registry_name"]) -> None: ...

global___DomainCheckReply = DomainCheckReply

@typing_extensions.final
class DomainClaimsCheckReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXISTS_FIELD_NUMBER: builtins.int
    CLAIMS_KEYS_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    CMD_RESP_FIELD_NUMBER: builtins.int
    exists: builtins.bool
    @property
    def claims_keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[launch.launch_pb2.ClaimsKey]: ...
    registry_name: builtins.str
    @property
    def cmd_resp(self) -> common.common_pb2.CommandResponse: ...
    def __init__(
        self,
        *,
        exists: builtins.bool = ...,
        claims_keys: collections.abc.Iterable[launch.launch_pb2.ClaimsKey] | None = ...,
        registry_name: builtins.str = ...,
        cmd_resp: common.common_pb2.CommandResponse | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cmd_resp", b"cmd_resp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["claims_keys", b"claims_keys", "cmd_resp", b"cmd_resp", "exists", b"exists", "registry_name", b"registry_name"]) -> None: ...

global___DomainClaimsCheckReply = DomainClaimsCheckReply

@typing_extensions.final
class DomainInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    AUTH_INFO_FIELD_NUMBER: builtins.int
    HOSTS_FIELD_NUMBER: builtins.int
    LAUNCH_INFO_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    DONUTS_FEE_AGREEMENT_FIELD_NUMBER: builtins.int
    EURID_DATA_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def auth_info(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def hosts(self) -> global___DomainHosts: ...
    @property
    def launch_info(self) -> launch.launch_pb2.LaunchInfo: ...
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def donuts_fee_agreement(self) -> fee.fee_pb2.DonutsFeeData: ...
    @property
    def eurid_data(self) -> eurid.eurid_pb2.DomainInfoRequest: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        auth_info: google.protobuf.wrappers_pb2.StringValue | None = ...,
        hosts: global___DomainHosts | None = ...,
        launch_info: launch.launch_pb2.LaunchInfo | None = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        donuts_fee_agreement: fee.fee_pb2.DonutsFeeData | None = ...,
        eurid_data: eurid.eurid_pb2.DomainInfoRequest | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_info", b"auth_info", "donuts_fee_agreement", b"donuts_fee_agreement", "eurid_data", b"eurid_data", "hosts", b"hosts", "launch_info", b"launch_info", "registry_name", b"registry_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_info", b"auth_info", "donuts_fee_agreement", b"donuts_fee_agreement", "eurid_data", b"eurid_data", "hosts", b"hosts", "launch_info", b"launch_info", "name", b"name", "registry_name", b"registry_name"]) -> None: ...

global___DomainInfoRequest = DomainInfoRequest

@typing_extensions.final
class DomainInfoReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    REGISTRY_ID_FIELD_NUMBER: builtins.int
    STATUSES_FIELD_NUMBER: builtins.int
    REGISTRANT_FIELD_NUMBER: builtins.int
    CONTACTS_FIELD_NUMBER: builtins.int
    NAMESERVERS_FIELD_NUMBER: builtins.int
    HOSTS_FIELD_NUMBER: builtins.int
    CLIENT_ID_FIELD_NUMBER: builtins.int
    CLIENT_CREATED_ID_FIELD_NUMBER: builtins.int
    CREATION_DATE_FIELD_NUMBER: builtins.int
    EXPIRY_DATE_FIELD_NUMBER: builtins.int
    LAST_UPDATED_CLIENT_FIELD_NUMBER: builtins.int
    LAST_UPDATED_DATE_FIELD_NUMBER: builtins.int
    LAST_TRANSFER_DATE_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    RGP_STATE_FIELD_NUMBER: builtins.int
    AUTH_INFO_FIELD_NUMBER: builtins.int
    SEC_DNS_FIELD_NUMBER: builtins.int
    LAUNCH_INFO_FIELD_NUMBER: builtins.int
    DONUTS_FEE_DATA_FIELD_NUMBER: builtins.int
    VERISIGN_WHOIS_INFO_FIELD_NUMBER: builtins.int
    CMD_RESP_FIELD_NUMBER: builtins.int
    EURID_IDN_FIELD_NUMBER: builtins.int
    EURID_DATA_FIELD_NUMBER: builtins.int
    ISNIC_INFO_FIELD_NUMBER: builtins.int
    PERSONAL_REGISTRATION_FIELD_NUMBER: builtins.int
    KEYSYS_FIELD_NUMBER: builtins.int
    name: builtins.str
    registry_id: builtins.str
    @property
    def statuses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[domain_common.domain_common_pb2.DomainStatus.ValueType]: ...
    registrant: builtins.str
    @property
    def contacts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Contact]: ...
    @property
    def nameservers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NameServer]: ...
    @property
    def hosts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    client_id: builtins.str
    @property
    def client_created_id(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def creation_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def expiry_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def last_updated_client(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def last_updated_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def last_transfer_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    registry_name: builtins.str
    @property
    def rgp_state(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[rgp.rgp_pb2.RGPState.ValueType]: ...
    @property
    def auth_info(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def sec_dns(self) -> global___SecDNSData: ...
    @property
    def launch_info(self) -> launch.launch_pb2.LaunchInfoData: ...
    @property
    def donuts_fee_data(self) -> fee.fee_pb2.DonutsFeeData: ...
    @property
    def verisign_whois_info(self) -> global___VerisignWhoisInfo: ...
    @property
    def cmd_resp(self) -> common.common_pb2.CommandResponse: ...
    @property
    def eurid_idn(self) -> eurid.eurid_pb2.IDN: ...
    @property
    def eurid_data(self) -> eurid.eurid_pb2.DomainInfo: ...
    @property
    def isnic_info(self) -> isnic.isnic_pb2.DomainInfo: ...
    @property
    def personal_registration(self) -> personal_registration.personal_registration_pb2.PersonalRegistrationInfo: ...
    @property
    def keysys(self) -> keysys.keysys_pb2.DomainInfo: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        registry_id: builtins.str = ...,
        statuses: collections.abc.Iterable[domain_common.domain_common_pb2.DomainStatus.ValueType] | None = ...,
        registrant: builtins.str = ...,
        contacts: collections.abc.Iterable[global___Contact] | None = ...,
        nameservers: collections.abc.Iterable[global___NameServer] | None = ...,
        hosts: collections.abc.Iterable[builtins.str] | None = ...,
        client_id: builtins.str = ...,
        client_created_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
        creation_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        expiry_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        last_updated_client: google.protobuf.wrappers_pb2.StringValue | None = ...,
        last_updated_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        last_transfer_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        registry_name: builtins.str = ...,
        rgp_state: collections.abc.Iterable[rgp.rgp_pb2.RGPState.ValueType] | None = ...,
        auth_info: google.protobuf.wrappers_pb2.StringValue | None = ...,
        sec_dns: global___SecDNSData | None = ...,
        launch_info: launch.launch_pb2.LaunchInfoData | None = ...,
        donuts_fee_data: fee.fee_pb2.DonutsFeeData | None = ...,
        verisign_whois_info: global___VerisignWhoisInfo | None = ...,
        cmd_resp: common.common_pb2.CommandResponse | None = ...,
        eurid_idn: eurid.eurid_pb2.IDN | None = ...,
        eurid_data: eurid.eurid_pb2.DomainInfo | None = ...,
        isnic_info: isnic.isnic_pb2.DomainInfo | None = ...,
        personal_registration: personal_registration.personal_registration_pb2.PersonalRegistrationInfo | None = ...,
        keysys: keysys.keysys_pb2.DomainInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_info", b"auth_info", "client_created_id", b"client_created_id", "cmd_resp", b"cmd_resp", "creation_date", b"creation_date", "donuts_fee_data", b"donuts_fee_data", "eurid_data", b"eurid_data", "eurid_idn", b"eurid_idn", "expiry_date", b"expiry_date", "isnic_info", b"isnic_info", "keysys", b"keysys", "last_transfer_date", b"last_transfer_date", "last_updated_client", b"last_updated_client", "last_updated_date", b"last_updated_date", "launch_info", b"launch_info", "personal_registration", b"personal_registration", "sec_dns", b"sec_dns", "verisign_whois_info", b"verisign_whois_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_info", b"auth_info", "client_created_id", b"client_created_id", "client_id", b"client_id", "cmd_resp", b"cmd_resp", "contacts", b"contacts", "creation_date", b"creation_date", "donuts_fee_data", b"donuts_fee_data", "eurid_data", b"eurid_data", "eurid_idn", b"eurid_idn", "expiry_date", b"expiry_date", "hosts", b"hosts", "isnic_info", b"isnic_info", "keysys", b"keysys", "last_transfer_date", b"last_transfer_date", "last_updated_client", b"last_updated_client", "last_updated_date", b"last_updated_date", "launch_info", b"launch_info", "name", b"name", "nameservers", b"nameservers", "personal_registration", b"personal_registration", "registrant", b"registrant", "registry_id", b"registry_id", "registry_name", b"registry_name", "rgp_state", b"rgp_state", "sec_dns", b"sec_dns", "statuses", b"statuses", "verisign_whois_info", b"verisign_whois_info"]) -> None: ...

global___DomainInfoReply = DomainInfoReply

@typing_extensions.final
class DomainCreateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PERIOD_FIELD_NUMBER: builtins.int
    REGISTRANT_FIELD_NUMBER: builtins.int
    CONTACTS_FIELD_NUMBER: builtins.int
    NAMESERVERS_FIELD_NUMBER: builtins.int
    AUTH_INFO_FIELD_NUMBER: builtins.int
    SEC_DNS_FIELD_NUMBER: builtins.int
    LAUNCH_DATA_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    DONUTS_FEE_AGREEMENT_FIELD_NUMBER: builtins.int
    FEE_AGREEMENT_FIELD_NUMBER: builtins.int
    EURID_DATA_FIELD_NUMBER: builtins.int
    ISNIC_PAYMENT_FIELD_NUMBER: builtins.int
    PERSONAL_REGISTRATION_FIELD_NUMBER: builtins.int
    KEYSYS_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def period(self) -> common.common_pb2.Period: ...
    registrant: builtins.str
    @property
    def contacts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Contact]: ...
    @property
    def nameservers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NameServer]: ...
    auth_info: builtins.str
    @property
    def sec_dns(self) -> global___SecDNSData: ...
    @property
    def launch_data(self) -> launch.launch_pb2.LaunchCreate: ...
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def donuts_fee_agreement(self) -> fee.fee_pb2.DonutsFeeData: ...
    @property
    def fee_agreement(self) -> fee.fee_pb2.FeeAgreement: ...
    @property
    def eurid_data(self) -> eurid.eurid_pb2.DomainCreateExtension: ...
    @property
    def isnic_payment(self) -> isnic.isnic_pb2.PaymentInfo: ...
    @property
    def personal_registration(self) -> personal_registration.personal_registration_pb2.PersonalRegistrationInfo: ...
    @property
    def keysys(self) -> keysys.keysys_pb2.DomainCreate: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        period: common.common_pb2.Period | None = ...,
        registrant: builtins.str = ...,
        contacts: collections.abc.Iterable[global___Contact] | None = ...,
        nameservers: collections.abc.Iterable[global___NameServer] | None = ...,
        auth_info: builtins.str = ...,
        sec_dns: global___SecDNSData | None = ...,
        launch_data: launch.launch_pb2.LaunchCreate | None = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        donuts_fee_agreement: fee.fee_pb2.DonutsFeeData | None = ...,
        fee_agreement: fee.fee_pb2.FeeAgreement | None = ...,
        eurid_data: eurid.eurid_pb2.DomainCreateExtension | None = ...,
        isnic_payment: isnic.isnic_pb2.PaymentInfo | None = ...,
        personal_registration: personal_registration.personal_registration_pb2.PersonalRegistrationInfo | None = ...,
        keysys: keysys.keysys_pb2.DomainCreate | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["donuts_fee_agreement", b"donuts_fee_agreement", "eurid_data", b"eurid_data", "fee_agreement", b"fee_agreement", "isnic_payment", b"isnic_payment", "keysys", b"keysys", "launch_data", b"launch_data", "period", b"period", "personal_registration", b"personal_registration", "registry_name", b"registry_name", "sec_dns", b"sec_dns"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_info", b"auth_info", "contacts", b"contacts", "donuts_fee_agreement", b"donuts_fee_agreement", "eurid_data", b"eurid_data", "fee_agreement", b"fee_agreement", "isnic_payment", b"isnic_payment", "keysys", b"keysys", "launch_data", b"launch_data", "name", b"name", "nameservers", b"nameservers", "period", b"period", "personal_registration", b"personal_registration", "registrant", b"registrant", "registry_name", b"registry_name", "sec_dns", b"sec_dns"]) -> None: ...

global___DomainCreateRequest = DomainCreateRequest

@typing_extensions.final
class DomainCreateReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PENDING_FIELD_NUMBER: builtins.int
    CREATION_DATE_FIELD_NUMBER: builtins.int
    EXPIRY_DATE_FIELD_NUMBER: builtins.int
    FEE_DATA_FIELD_NUMBER: builtins.int
    DONUTS_FEE_DATA_FIELD_NUMBER: builtins.int
    LAUNCH_DATA_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    CMD_RESP_FIELD_NUMBER: builtins.int
    EURID_IDN_FIELD_NUMBER: builtins.int
    PERSONAL_REGISTRATION_FIELD_NUMBER: builtins.int
    name: builtins.str
    pending: builtins.bool
    @property
    def creation_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def expiry_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def fee_data(self) -> fee.fee_pb2.FeeData: ...
    @property
    def donuts_fee_data(self) -> fee.fee_pb2.DonutsFeeData: ...
    @property
    def launch_data(self) -> launch.launch_pb2.LaunchData: ...
    registry_name: builtins.str
    @property
    def cmd_resp(self) -> common.common_pb2.CommandResponse: ...
    @property
    def eurid_idn(self) -> eurid.eurid_pb2.IDN: ...
    @property
    def personal_registration(self) -> personal_registration.personal_registration_pb2.PersonalRegistrationCreate: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        pending: builtins.bool = ...,
        creation_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        expiry_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        fee_data: fee.fee_pb2.FeeData | None = ...,
        donuts_fee_data: fee.fee_pb2.DonutsFeeData | None = ...,
        launch_data: launch.launch_pb2.LaunchData | None = ...,
        registry_name: builtins.str = ...,
        cmd_resp: common.common_pb2.CommandResponse | None = ...,
        eurid_idn: eurid.eurid_pb2.IDN | None = ...,
        personal_registration: personal_registration.personal_registration_pb2.PersonalRegistrationCreate | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cmd_resp", b"cmd_resp", "creation_date", b"creation_date", "donuts_fee_data", b"donuts_fee_data", "eurid_idn", b"eurid_idn", "expiry_date", b"expiry_date", "fee_data", b"fee_data", "launch_data", b"launch_data", "personal_registration", b"personal_registration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cmd_resp", b"cmd_resp", "creation_date", b"creation_date", "donuts_fee_data", b"donuts_fee_data", "eurid_idn", b"eurid_idn", "expiry_date", b"expiry_date", "fee_data", b"fee_data", "launch_data", b"launch_data", "name", b"name", "pending", b"pending", "personal_registration", b"personal_registration", "registry_name", b"registry_name"]) -> None: ...

global___DomainCreateReply = DomainCreateReply

@typing_extensions.final
class DomainDeleteRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    LAUNCH_DATA_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    DONUTS_FEE_AGREEMENT_FIELD_NUMBER: builtins.int
    EURID_DATA_FIELD_NUMBER: builtins.int
    KEYSYS_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def launch_data(self) -> launch.launch_pb2.LaunchData: ...
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def donuts_fee_agreement(self) -> fee.fee_pb2.DonutsFeeData: ...
    @property
    def eurid_data(self) -> eurid.eurid_pb2.DomainDeleteExtension: ...
    @property
    def keysys(self) -> keysys.keysys_pb2.DomainDelete: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        launch_data: launch.launch_pb2.LaunchData | None = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        donuts_fee_agreement: fee.fee_pb2.DonutsFeeData | None = ...,
        eurid_data: eurid.eurid_pb2.DomainDeleteExtension | None = ...,
        keysys: keysys.keysys_pb2.DomainDelete | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["donuts_fee_agreement", b"donuts_fee_agreement", "eurid_data", b"eurid_data", "keysys", b"keysys", "launch_data", b"launch_data", "registry_name", b"registry_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["donuts_fee_agreement", b"donuts_fee_agreement", "eurid_data", b"eurid_data", "keysys", b"keysys", "launch_data", b"launch_data", "name", b"name", "registry_name", b"registry_name"]) -> None: ...

global___DomainDeleteRequest = DomainDeleteRequest

@typing_extensions.final
class DomainDeleteReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PENDING_FIELD_NUMBER: builtins.int
    FEE_DATA_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    CMD_RESP_FIELD_NUMBER: builtins.int
    EURID_IDN_FIELD_NUMBER: builtins.int
    pending: builtins.bool
    @property
    def fee_data(self) -> fee.fee_pb2.FeeData: ...
    registry_name: builtins.str
    @property
    def cmd_resp(self) -> common.common_pb2.CommandResponse: ...
    @property
    def eurid_idn(self) -> eurid.eurid_pb2.IDN: ...
    def __init__(
        self,
        *,
        pending: builtins.bool = ...,
        fee_data: fee.fee_pb2.FeeData | None = ...,
        registry_name: builtins.str = ...,
        cmd_resp: common.common_pb2.CommandResponse | None = ...,
        eurid_idn: eurid.eurid_pb2.IDN | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cmd_resp", b"cmd_resp", "eurid_idn", b"eurid_idn", "fee_data", b"fee_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cmd_resp", b"cmd_resp", "eurid_idn", b"eurid_idn", "fee_data", b"fee_data", "pending", b"pending", "registry_name", b"registry_name"]) -> None: ...

global___DomainDeleteReply = DomainDeleteReply

@typing_extensions.final
class DomainUpdateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Param(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAMESERVER_FIELD_NUMBER: builtins.int
        CONTACT_FIELD_NUMBER: builtins.int
        STATE_FIELD_NUMBER: builtins.int
        @property
        def nameserver(self) -> global___NameServer: ...
        @property
        def contact(self) -> global___Contact: ...
        state: domain_common.domain_common_pb2.DomainStatus.ValueType
        def __init__(
            self,
            *,
            nameserver: global___NameServer | None = ...,
            contact: global___Contact | None = ...,
            state: domain_common.domain_common_pb2.DomainStatus.ValueType = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["contact", b"contact", "nameserver", b"nameserver", "param", b"param", "state", b"state"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["contact", b"contact", "nameserver", b"nameserver", "param", b"param", "state", b"state"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["param", b"param"]) -> typing_extensions.Literal["nameserver", "contact", "state"] | None: ...

    NAME_FIELD_NUMBER: builtins.int
    ADD_FIELD_NUMBER: builtins.int
    REMOVE_FIELD_NUMBER: builtins.int
    NEW_REGISTRANT_FIELD_NUMBER: builtins.int
    NEW_AUTH_INFO_FIELD_NUMBER: builtins.int
    SEC_DNS_FIELD_NUMBER: builtins.int
    LAUNCH_DATA_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    DONUTS_FEE_AGREEMENT_FIELD_NUMBER: builtins.int
    FEE_AGREEMENT_FIELD_NUMBER: builtins.int
    EURID_DATA_FIELD_NUMBER: builtins.int
    ISNIC_INFO_FIELD_NUMBER: builtins.int
    KEYSYS_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def add(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DomainUpdateRequest.Param]: ...
    @property
    def remove(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DomainUpdateRequest.Param]: ...
    @property
    def new_registrant(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def new_auth_info(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def sec_dns(self) -> global___UpdateSecDNSData: ...
    @property
    def launch_data(self) -> launch.launch_pb2.LaunchData: ...
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def donuts_fee_agreement(self) -> fee.fee_pb2.DonutsFeeData: ...
    @property
    def fee_agreement(self) -> fee.fee_pb2.FeeAgreement: ...
    @property
    def eurid_data(self) -> eurid.eurid_pb2.DomainUpdateExtension: ...
    @property
    def isnic_info(self) -> isnic.isnic_pb2.DomainUpdate: ...
    @property
    def keysys(self) -> keysys.keysys_pb2.DomainUpdate: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        add: collections.abc.Iterable[global___DomainUpdateRequest.Param] | None = ...,
        remove: collections.abc.Iterable[global___DomainUpdateRequest.Param] | None = ...,
        new_registrant: google.protobuf.wrappers_pb2.StringValue | None = ...,
        new_auth_info: google.protobuf.wrappers_pb2.StringValue | None = ...,
        sec_dns: global___UpdateSecDNSData | None = ...,
        launch_data: launch.launch_pb2.LaunchData | None = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        donuts_fee_agreement: fee.fee_pb2.DonutsFeeData | None = ...,
        fee_agreement: fee.fee_pb2.FeeAgreement | None = ...,
        eurid_data: eurid.eurid_pb2.DomainUpdateExtension | None = ...,
        isnic_info: isnic.isnic_pb2.DomainUpdate | None = ...,
        keysys: keysys.keysys_pb2.DomainUpdate | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["donuts_fee_agreement", b"donuts_fee_agreement", "eurid_data", b"eurid_data", "fee_agreement", b"fee_agreement", "isnic_info", b"isnic_info", "keysys", b"keysys", "launch_data", b"launch_data", "new_auth_info", b"new_auth_info", "new_registrant", b"new_registrant", "registry_name", b"registry_name", "sec_dns", b"sec_dns"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["add", b"add", "donuts_fee_agreement", b"donuts_fee_agreement", "eurid_data", b"eurid_data", "fee_agreement", b"fee_agreement", "isnic_info", b"isnic_info", "keysys", b"keysys", "launch_data", b"launch_data", "name", b"name", "new_auth_info", b"new_auth_info", "new_registrant", b"new_registrant", "registry_name", b"registry_name", "remove", b"remove", "sec_dns", b"sec_dns"]) -> None: ...

global___DomainUpdateRequest = DomainUpdateRequest

@typing_extensions.final
class DomainSyncRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    MONTH_FIELD_NUMBER: builtins.int
    DAY_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    month: builtins.int
    day: builtins.int
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        month: builtins.int = ...,
        day: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["registry_name", b"registry_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["day", b"day", "month", b"month", "name", b"name", "registry_name", b"registry_name"]) -> None: ...

global___DomainSyncRequest = DomainSyncRequest

@typing_extensions.final
class DomainUpdateReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PENDING_FIELD_NUMBER: builtins.int
    FEE_DATA_FIELD_NUMBER: builtins.int
    DONUTS_FEE_DATA_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    CMD_RESP_FIELD_NUMBER: builtins.int
    pending: builtins.bool
    @property
    def fee_data(self) -> fee.fee_pb2.FeeData: ...
    @property
    def donuts_fee_data(self) -> fee.fee_pb2.DonutsFeeData: ...
    registry_name: builtins.str
    @property
    def cmd_resp(self) -> common.common_pb2.CommandResponse: ...
    def __init__(
        self,
        *,
        pending: builtins.bool = ...,
        fee_data: fee.fee_pb2.FeeData | None = ...,
        donuts_fee_data: fee.fee_pb2.DonutsFeeData | None = ...,
        registry_name: builtins.str = ...,
        cmd_resp: common.common_pb2.CommandResponse | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cmd_resp", b"cmd_resp", "donuts_fee_data", b"donuts_fee_data", "fee_data", b"fee_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cmd_resp", b"cmd_resp", "donuts_fee_data", b"donuts_fee_data", "fee_data", b"fee_data", "pending", b"pending", "registry_name", b"registry_name"]) -> None: ...

global___DomainUpdateReply = DomainUpdateReply

@typing_extensions.final
class DomainRenewRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PERIOD_FIELD_NUMBER: builtins.int
    CURRENT_EXPIRY_DATE_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    DONUTS_FEE_AGREEMENT_FIELD_NUMBER: builtins.int
    FEE_AGREEMENT_FIELD_NUMBER: builtins.int
    ISNIC_PAYMENT_FIELD_NUMBER: builtins.int
    KEYSYS_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def period(self) -> common.common_pb2.Period: ...
    @property
    def current_expiry_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def donuts_fee_agreement(self) -> fee.fee_pb2.DonutsFeeData: ...
    @property
    def fee_agreement(self) -> fee.fee_pb2.FeeAgreement: ...
    @property
    def isnic_payment(self) -> isnic.isnic_pb2.PaymentInfo: ...
    @property
    def keysys(self) -> keysys.keysys_pb2.DomainRenew: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        period: common.common_pb2.Period | None = ...,
        current_expiry_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        donuts_fee_agreement: fee.fee_pb2.DonutsFeeData | None = ...,
        fee_agreement: fee.fee_pb2.FeeAgreement | None = ...,
        isnic_payment: isnic.isnic_pb2.PaymentInfo | None = ...,
        keysys: keysys.keysys_pb2.DomainRenew | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["current_expiry_date", b"current_expiry_date", "donuts_fee_agreement", b"donuts_fee_agreement", "fee_agreement", b"fee_agreement", "isnic_payment", b"isnic_payment", "keysys", b"keysys", "period", b"period", "registry_name", b"registry_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_expiry_date", b"current_expiry_date", "donuts_fee_agreement", b"donuts_fee_agreement", "fee_agreement", b"fee_agreement", "isnic_payment", b"isnic_payment", "keysys", b"keysys", "name", b"name", "period", b"period", "registry_name", b"registry_name"]) -> None: ...

global___DomainRenewRequest = DomainRenewRequest

@typing_extensions.final
class DomainRenewReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PENDING_FIELD_NUMBER: builtins.int
    EXPIRY_DATE_FIELD_NUMBER: builtins.int
    FEE_DATA_FIELD_NUMBER: builtins.int
    DONUTS_FEE_DATA_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    CMD_RESP_FIELD_NUMBER: builtins.int
    EURID_IDN_FIELD_NUMBER: builtins.int
    EURID_DATA_FIELD_NUMBER: builtins.int
    PERSONAL_REGISTRATION_FIELD_NUMBER: builtins.int
    name: builtins.str
    pending: builtins.bool
    @property
    def expiry_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def fee_data(self) -> fee.fee_pb2.FeeData: ...
    @property
    def donuts_fee_data(self) -> fee.fee_pb2.DonutsFeeData: ...
    registry_name: builtins.str
    @property
    def cmd_resp(self) -> common.common_pb2.CommandResponse: ...
    @property
    def eurid_idn(self) -> eurid.eurid_pb2.IDN: ...
    @property
    def eurid_data(self) -> eurid.eurid_pb2.DomainRenewInfo: ...
    @property
    def personal_registration(self) -> personal_registration.personal_registration_pb2.PersonalRegistrationCreate: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        pending: builtins.bool = ...,
        expiry_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        fee_data: fee.fee_pb2.FeeData | None = ...,
        donuts_fee_data: fee.fee_pb2.DonutsFeeData | None = ...,
        registry_name: builtins.str = ...,
        cmd_resp: common.common_pb2.CommandResponse | None = ...,
        eurid_idn: eurid.eurid_pb2.IDN | None = ...,
        eurid_data: eurid.eurid_pb2.DomainRenewInfo | None = ...,
        personal_registration: personal_registration.personal_registration_pb2.PersonalRegistrationCreate | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cmd_resp", b"cmd_resp", "donuts_fee_data", b"donuts_fee_data", "eurid_data", b"eurid_data", "eurid_idn", b"eurid_idn", "expiry_date", b"expiry_date", "fee_data", b"fee_data", "personal_registration", b"personal_registration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cmd_resp", b"cmd_resp", "donuts_fee_data", b"donuts_fee_data", "eurid_data", b"eurid_data", "eurid_idn", b"eurid_idn", "expiry_date", b"expiry_date", "fee_data", b"fee_data", "name", b"name", "pending", b"pending", "personal_registration", b"personal_registration", "registry_name", b"registry_name"]) -> None: ...

global___DomainRenewReply = DomainRenewReply

@typing_extensions.final
class DomainTransferQueryRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    AUTH_INFO_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def auth_info(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        auth_info: google.protobuf.wrappers_pb2.StringValue | None = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_info", b"auth_info", "registry_name", b"registry_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_info", b"auth_info", "name", b"name", "registry_name", b"registry_name"]) -> None: ...

global___DomainTransferQueryRequest = DomainTransferQueryRequest

@typing_extensions.final
class DomainTransferRequestRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PERIOD_FIELD_NUMBER: builtins.int
    AUTH_INFO_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    DONUTS_FEE_AGREEMENT_FIELD_NUMBER: builtins.int
    FEE_AGREEMENT_FIELD_NUMBER: builtins.int
    EURID_DATA_FIELD_NUMBER: builtins.int
    KEYSYS_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def period(self) -> common.common_pb2.Period: ...
    auth_info: builtins.str
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def donuts_fee_agreement(self) -> fee.fee_pb2.DonutsFeeData: ...
    @property
    def fee_agreement(self) -> fee.fee_pb2.FeeAgreement: ...
    @property
    def eurid_data(self) -> eurid.eurid_pb2.DomainTransferExtension: ...
    @property
    def keysys(self) -> keysys.keysys_pb2.DomainTransfer: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        period: common.common_pb2.Period | None = ...,
        auth_info: builtins.str = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        donuts_fee_agreement: fee.fee_pb2.DonutsFeeData | None = ...,
        fee_agreement: fee.fee_pb2.FeeAgreement | None = ...,
        eurid_data: eurid.eurid_pb2.DomainTransferExtension | None = ...,
        keysys: keysys.keysys_pb2.DomainTransfer | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["donuts_fee_agreement", b"donuts_fee_agreement", "eurid_data", b"eurid_data", "fee_agreement", b"fee_agreement", "keysys", b"keysys", "period", b"period", "registry_name", b"registry_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_info", b"auth_info", "donuts_fee_agreement", b"donuts_fee_agreement", "eurid_data", b"eurid_data", "fee_agreement", b"fee_agreement", "keysys", b"keysys", "name", b"name", "period", b"period", "registry_name", b"registry_name"]) -> None: ...

global___DomainTransferRequestRequest = DomainTransferRequestRequest

@typing_extensions.final
class DomainTransferAcceptRejectRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    AUTH_INFO_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    auth_info: builtins.str
    @property
    def registry_name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        auth_info: builtins.str = ...,
        registry_name: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["registry_name", b"registry_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_info", b"auth_info", "name", b"name", "registry_name", b"registry_name"]) -> None: ...

global___DomainTransferAcceptRejectRequest = DomainTransferAcceptRejectRequest

@typing_extensions.final
class DomainTransferReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PENDING_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    REQUESTED_CLIENT_ID_FIELD_NUMBER: builtins.int
    REQUESTED_DATE_FIELD_NUMBER: builtins.int
    ACT_CLIENT_ID_FIELD_NUMBER: builtins.int
    ACT_DATE_FIELD_NUMBER: builtins.int
    EXPIRY_DATE_FIELD_NUMBER: builtins.int
    FEE_DATA_FIELD_NUMBER: builtins.int
    DONUTS_FEE_DATA_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    CMD_RESP_FIELD_NUMBER: builtins.int
    EURID_IDN_FIELD_NUMBER: builtins.int
    EURID_DATA_FIELD_NUMBER: builtins.int
    PERSONAL_REGISTRATION_FIELD_NUMBER: builtins.int
    pending: builtins.bool
    name: builtins.str
    status: common.common_pb2.TransferStatus.ValueType
    requested_client_id: builtins.str
    @property
    def requested_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    act_client_id: builtins.str
    @property
    def act_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def expiry_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def fee_data(self) -> fee.fee_pb2.FeeData: ...
    @property
    def donuts_fee_data(self) -> fee.fee_pb2.DonutsFeeData: ...
    registry_name: builtins.str
    @property
    def cmd_resp(self) -> common.common_pb2.CommandResponse: ...
    @property
    def eurid_idn(self) -> eurid.eurid_pb2.IDN: ...
    @property
    def eurid_data(self) -> eurid.eurid_pb2.DomainTransferInfo: ...
    @property
    def personal_registration(self) -> personal_registration.personal_registration_pb2.PersonalRegistrationCreate: ...
    def __init__(
        self,
        *,
        pending: builtins.bool = ...,
        name: builtins.str = ...,
        status: common.common_pb2.TransferStatus.ValueType = ...,
        requested_client_id: builtins.str = ...,
        requested_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        act_client_id: builtins.str = ...,
        act_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        expiry_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        fee_data: fee.fee_pb2.FeeData | None = ...,
        donuts_fee_data: fee.fee_pb2.DonutsFeeData | None = ...,
        registry_name: builtins.str = ...,
        cmd_resp: common.common_pb2.CommandResponse | None = ...,
        eurid_idn: eurid.eurid_pb2.IDN | None = ...,
        eurid_data: eurid.eurid_pb2.DomainTransferInfo | None = ...,
        personal_registration: personal_registration.personal_registration_pb2.PersonalRegistrationCreate | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["act_date", b"act_date", "cmd_resp", b"cmd_resp", "donuts_fee_data", b"donuts_fee_data", "eurid_data", b"eurid_data", "eurid_idn", b"eurid_idn", "expiry_date", b"expiry_date", "fee_data", b"fee_data", "personal_registration", b"personal_registration", "requested_date", b"requested_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["act_client_id", b"act_client_id", "act_date", b"act_date", "cmd_resp", b"cmd_resp", "donuts_fee_data", b"donuts_fee_data", "eurid_data", b"eurid_data", "eurid_idn", b"eurid_idn", "expiry_date", b"expiry_date", "fee_data", b"fee_data", "name", b"name", "pending", b"pending", "personal_registration", b"personal_registration", "registry_name", b"registry_name", "requested_client_id", b"requested_client_id", "requested_date", b"requested_date", "status", b"status"]) -> None: ...

global___DomainTransferReply = DomainTransferReply

@typing_extensions.final
class SecDNSData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAX_SIG_LIFE_FIELD_NUMBER: builtins.int
    DS_DATA_FIELD_NUMBER: builtins.int
    KEY_DATA_FIELD_NUMBER: builtins.int
    @property
    def max_sig_life(self) -> google.protobuf.wrappers_pb2.Int64Value: ...
    @property
    def ds_data(self) -> global___SecDNSDSData: ...
    @property
    def key_data(self) -> global___SecDNSKeyData: ...
    def __init__(
        self,
        *,
        max_sig_life: google.protobuf.wrappers_pb2.Int64Value | None = ...,
        ds_data: global___SecDNSDSData | None = ...,
        key_data: global___SecDNSKeyData | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data", b"data", "ds_data", b"ds_data", "key_data", b"key_data", "max_sig_life", b"max_sig_life"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "ds_data", b"ds_data", "key_data", b"key_data", "max_sig_life", b"max_sig_life"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["data", b"data"]) -> typing_extensions.Literal["ds_data", "key_data"] | None: ...

global___SecDNSData = SecDNSData

@typing_extensions.final
class SecDNSDSData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SecDNSDSDatum]: ...
    def __init__(
        self,
        *,
        data: collections.abc.Iterable[global___SecDNSDSDatum] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data"]) -> None: ...

global___SecDNSDSData = SecDNSDSData

@typing_extensions.final
class SecDNSDSDatum(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_TAG_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    DIGEST_TYPE_FIELD_NUMBER: builtins.int
    DIGEST_FIELD_NUMBER: builtins.int
    KEY_DATA_FIELD_NUMBER: builtins.int
    key_tag: builtins.int
    algorithm: builtins.int
    digest_type: builtins.int
    digest: builtins.str
    @property
    def key_data(self) -> global___SecDNSKeyDatum: ...
    def __init__(
        self,
        *,
        key_tag: builtins.int = ...,
        algorithm: builtins.int = ...,
        digest_type: builtins.int = ...,
        digest: builtins.str = ...,
        key_data: global___SecDNSKeyDatum | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key_data", b"key_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "digest", b"digest", "digest_type", b"digest_type", "key_data", b"key_data", "key_tag", b"key_tag"]) -> None: ...

global___SecDNSDSDatum = SecDNSDSDatum

@typing_extensions.final
class SecDNSKeyData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SecDNSKeyDatum]: ...
    def __init__(
        self,
        *,
        data: collections.abc.Iterable[global___SecDNSKeyDatum] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data"]) -> None: ...

global___SecDNSKeyData = SecDNSKeyData

@typing_extensions.final
class SecDNSKeyDatum(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FLAGS_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    PUBLIC_KEY_FIELD_NUMBER: builtins.int
    flags: builtins.int
    protocol: builtins.int
    algorithm: builtins.int
    public_key: builtins.str
    def __init__(
        self,
        *,
        flags: builtins.int = ...,
        protocol: builtins.int = ...,
        algorithm: builtins.int = ...,
        public_key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "flags", b"flags", "protocol", b"protocol", "public_key", b"public_key"]) -> None: ...

global___SecDNSKeyDatum = SecDNSKeyDatum

@typing_extensions.final
class UpdateSecDNSData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    URGENT_FIELD_NUMBER: builtins.int
    NEW_MAX_SIG_LIFE_FIELD_NUMBER: builtins.int
    ADD_DS_DATA_FIELD_NUMBER: builtins.int
    ADD_KEY_DATA_FIELD_NUMBER: builtins.int
    ALL_FIELD_NUMBER: builtins.int
    REM_DS_DATA_FIELD_NUMBER: builtins.int
    REM_KEY_DATA_FIELD_NUMBER: builtins.int
    @property
    def urgent(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    @property
    def new_max_sig_life(self) -> google.protobuf.wrappers_pb2.Int64Value: ...
    @property
    def add_ds_data(self) -> global___SecDNSDSData: ...
    @property
    def add_key_data(self) -> global___SecDNSKeyData: ...
    all: builtins.bool
    @property
    def rem_ds_data(self) -> global___SecDNSDSData: ...
    @property
    def rem_key_data(self) -> global___SecDNSKeyData: ...
    def __init__(
        self,
        *,
        urgent: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        new_max_sig_life: google.protobuf.wrappers_pb2.Int64Value | None = ...,
        add_ds_data: global___SecDNSDSData | None = ...,
        add_key_data: global___SecDNSKeyData | None = ...,
        all: builtins.bool = ...,
        rem_ds_data: global___SecDNSDSData | None = ...,
        rem_key_data: global___SecDNSKeyData | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["add", b"add", "add_ds_data", b"add_ds_data", "add_key_data", b"add_key_data", "all", b"all", "new_max_sig_life", b"new_max_sig_life", "rem_ds_data", b"rem_ds_data", "rem_key_data", b"rem_key_data", "remove", b"remove", "urgent", b"urgent"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["add", b"add", "add_ds_data", b"add_ds_data", "add_key_data", b"add_key_data", "all", b"all", "new_max_sig_life", b"new_max_sig_life", "rem_ds_data", b"rem_ds_data", "rem_key_data", b"rem_key_data", "remove", b"remove", "urgent", b"urgent"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["add", b"add"]) -> typing_extensions.Literal["add_ds_data", "add_key_data"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["remove", b"remove"]) -> typing_extensions.Literal["all", "rem_ds_data", "rem_key_data"] | None: ...

global___UpdateSecDNSData = UpdateSecDNSData

@typing_extensions.final
class VerisignWhoisInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REGISTRAR_FIELD_NUMBER: builtins.int
    WHOIS_SERVER_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    IRIS_SERVER_FIELD_NUMBER: builtins.int
    registrar: builtins.str
    @property
    def whois_server(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def url(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def iris_server(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    def __init__(
        self,
        *,
        registrar: builtins.str = ...,
        whois_server: google.protobuf.wrappers_pb2.StringValue | None = ...,
        url: google.protobuf.wrappers_pb2.StringValue | None = ...,
        iris_server: google.protobuf.wrappers_pb2.StringValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["iris_server", b"iris_server", "url", b"url", "whois_server", b"whois_server"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["iris_server", b"iris_server", "registrar", b"registrar", "url", b"url", "whois_server", b"whois_server"]) -> None: ...

global___VerisignWhoisInfo = VerisignWhoisInfo

@typing_extensions.final
class DomainPANReply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    SERVER_TRANSACTION_ID_FIELD_NUMBER: builtins.int
    CLIENT_TRANSACTION_ID_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    name: builtins.str
    result: builtins.bool
    @property
    def server_transaction_id(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def client_transaction_id(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        result: builtins.bool = ...,
        server_transaction_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
        client_transaction_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
        date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["client_transaction_id", b"client_transaction_id", "date", b"date", "server_transaction_id", b"server_transaction_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["client_transaction_id", b"client_transaction_id", "date", b"date", "name", b"name", "result", b"result", "server_transaction_id", b"server_transaction_id"]) -> None: ...

global___DomainPANReply = DomainPANReply
