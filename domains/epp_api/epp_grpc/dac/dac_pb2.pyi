"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Environment:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EnvironmentEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Environment.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    RealTime: _Environment.ValueType  # 0
    TimeDelay: _Environment.ValueType  # 1

class Environment(_Environment, metaclass=_EnvironmentEnumTypeWrapper): ...

RealTime: Environment.ValueType  # 0
TimeDelay: Environment.ValueType  # 1
global___Environment = Environment

class _DomainState:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DomainStateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DomainState.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Registered: _DomainState.ValueType  # 0
    Available: _DomainState.ValueType  # 1
    NotWithinRegistry: _DomainState.ValueType  # 2
    RulesPrevent: _DomainState.ValueType  # 3

class DomainState(_DomainState, metaclass=_DomainStateEnumTypeWrapper): ...

Registered: DomainState.ValueType  # 0
Available: DomainState.ValueType  # 1
NotWithinRegistry: DomainState.ValueType  # 2
RulesPrevent: DomainState.ValueType  # 3
global___DomainState = DomainState

class _DomainStatus:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _DomainStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DomainStatus.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Unknown: _DomainStatus.ValueType  # 0
    RegisteredUntilExpiry: _DomainStatus.ValueType  # 1
    RenewalRequired: _DomainStatus.ValueType  # 2
    NoLongerRequired: _DomainStatus.ValueType  # 3

class DomainStatus(_DomainStatus, metaclass=_DomainStatusEnumTypeWrapper): ...

Unknown: DomainStatus.ValueType  # 0
RegisteredUntilExpiry: DomainStatus.ValueType  # 1
RenewalRequired: DomainStatus.ValueType  # 2
NoLongerRequired: DomainStatus.ValueType  # 3
global___DomainStatus = DomainStatus

@typing_extensions.final
class DomainRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    environment: global___Environment.ValueType
    registry_name: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        environment: global___Environment.ValueType = ...,
        registry_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["environment", b"environment", "name", b"name", "registry_name", b"registry_name"]) -> None: ...

global___DomainRequest = DomainRequest

@typing_extensions.final
class DomainResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REGISTRATION_STATE_FIELD_NUMBER: builtins.int
    DETAGGED_FIELD_NUMBER: builtins.int
    SUSPENDED_FIELD_NUMBER: builtins.int
    CREATED_FIELD_NUMBER: builtins.int
    EXPIRY_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    registration_state: global___DomainState.ValueType
    detagged: builtins.bool
    @property
    def suspended(self) -> google.protobuf.wrappers_pb2.BoolValue: ...
    @property
    def created(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def expiry(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    status: global___DomainStatus.ValueType
    tag: builtins.str
    def __init__(
        self,
        *,
        registration_state: global___DomainState.ValueType = ...,
        detagged: builtins.bool = ...,
        suspended: google.protobuf.wrappers_pb2.BoolValue | None = ...,
        created: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        expiry: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        status: global___DomainStatus.ValueType = ...,
        tag: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["created", b"created", "expiry", b"expiry", "suspended", b"suspended"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["created", b"created", "detagged", b"detagged", "expiry", b"expiry", "registration_state", b"registration_state", "status", b"status", "suspended", b"suspended", "tag", b"tag"]) -> None: ...

global___DomainResponse = DomainResponse

@typing_extensions.final
class UsageRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENVIRONMENT_FIELD_NUMBER: builtins.int
    REGISTRY_NAME_FIELD_NUMBER: builtins.int
    environment: global___Environment.ValueType
    registry_name: builtins.str
    def __init__(
        self,
        *,
        environment: global___Environment.ValueType = ...,
        registry_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["environment", b"environment", "registry_name", b"registry_name"]) -> None: ...

global___UsageRequest = UsageRequest

@typing_extensions.final
class UsageResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USAGE_60_FIELD_NUMBER: builtins.int
    USAGE_24_FIELD_NUMBER: builtins.int
    usage_60: builtins.int
    usage_24: builtins.int
    def __init__(
        self,
        *,
        usage_60: builtins.int = ...,
        usage_24: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["usage_24", b"usage_24", "usage_60", b"usage_60"]) -> None: ...

global___UsageResponse = UsageResponse
