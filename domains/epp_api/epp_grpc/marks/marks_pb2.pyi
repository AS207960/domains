"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import common.common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Entitlement:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EntitlementEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Entitlement.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Owner: _Entitlement.ValueType  # 0
    Assignee: _Entitlement.ValueType  # 1
    Licensee: _Entitlement.ValueType  # 2

class Entitlement(_Entitlement, metaclass=_EntitlementEnumTypeWrapper): ...

Owner: Entitlement.ValueType  # 0
Assignee: Entitlement.ValueType  # 1
Licensee: Entitlement.ValueType  # 2
global___Entitlement = Entitlement

class _ContactType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ContactTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ContactType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    OwnerContact: _ContactType.ValueType  # 0
    Agent: _ContactType.ValueType  # 1
    ThirdParty: _ContactType.ValueType  # 2

class ContactType(_ContactType, metaclass=_ContactTypeEnumTypeWrapper): ...

OwnerContact: ContactType.ValueType  # 0
Agent: ContactType.ValueType  # 1
ThirdParty: ContactType.ValueType  # 2
global___ContactType = ContactType

@typing.final
class Mark(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRADEMARK_FIELD_NUMBER: builtins.int
    TREATY_OR_STATUTE_FIELD_NUMBER: builtins.int
    COURT_FIELD_NUMBER: builtins.int
    @property
    def trademark(self) -> global___TradeMark: ...
    @property
    def treaty_or_statute(self) -> global___TreatyOrStatute: ...
    @property
    def court(self) -> global___Court: ...
    def __init__(
        self,
        *,
        trademark: global___TradeMark | None = ...,
        treaty_or_statute: global___TreatyOrStatute | None = ...,
        court: global___Court | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["court", b"court", "mark", b"mark", "trademark", b"trademark", "treaty_or_statute", b"treaty_or_statute"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["court", b"court", "mark", b"mark", "trademark", b"trademark", "treaty_or_statute", b"treaty_or_statute"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["mark", b"mark"]) -> typing.Literal["trademark", "treaty_or_statute", "court"] | None: ...

global___Mark = Mark

@typing.final
class TradeMark(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    MARK_NAME_FIELD_NUMBER: builtins.int
    HOLDERS_FIELD_NUMBER: builtins.int
    CONTACTS_FIELD_NUMBER: builtins.int
    JURISDICTION_FIELD_NUMBER: builtins.int
    CLASSES_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    GOODS_AND_SERVICES_FIELD_NUMBER: builtins.int
    APPLICATION_ID_FIELD_NUMBER: builtins.int
    APPLICATION_DATE_FIELD_NUMBER: builtins.int
    REGISTRATION_ID_FIELD_NUMBER: builtins.int
    REGISTRATION_DATE_FIELD_NUMBER: builtins.int
    EXPIRY_DATE_FIELD_NUMBER: builtins.int
    id: builtins.str
    mark_name: builtins.str
    jurisdiction: builtins.str
    goods_and_services: builtins.str
    registration_id: builtins.str
    @property
    def holders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Holder]: ...
    @property
    def contacts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Contact]: ...
    @property
    def classes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def labels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def application_id(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def application_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def registration_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def expiry_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        mark_name: builtins.str = ...,
        holders: collections.abc.Iterable[global___Holder] | None = ...,
        contacts: collections.abc.Iterable[global___Contact] | None = ...,
        jurisdiction: builtins.str = ...,
        classes: collections.abc.Iterable[builtins.int] | None = ...,
        labels: collections.abc.Iterable[builtins.str] | None = ...,
        goods_and_services: builtins.str = ...,
        application_id: google.protobuf.wrappers_pb2.StringValue | None = ...,
        application_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        registration_id: builtins.str = ...,
        registration_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        expiry_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["application_date", b"application_date", "application_id", b"application_id", "expiry_date", b"expiry_date", "registration_date", b"registration_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["application_date", b"application_date", "application_id", b"application_id", "classes", b"classes", "contacts", b"contacts", "expiry_date", b"expiry_date", "goods_and_services", b"goods_and_services", "holders", b"holders", "id", b"id", "jurisdiction", b"jurisdiction", "labels", b"labels", "mark_name", b"mark_name", "registration_date", b"registration_date", "registration_id", b"registration_id"]) -> None: ...

global___TradeMark = TradeMark

@typing.final
class TreatyOrStatute(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    MARK_NAME_FIELD_NUMBER: builtins.int
    HOLDERS_FIELD_NUMBER: builtins.int
    CONTACTS_FIELD_NUMBER: builtins.int
    PROTECTIONS_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    GOODS_AND_SERVICES_FIELD_NUMBER: builtins.int
    REFERENCE_NUMBER_FIELD_NUMBER: builtins.int
    PROTECTION_DATE_FIELD_NUMBER: builtins.int
    TITLE_FIELD_NUMBER: builtins.int
    EXECUTION_DATE_FIELD_NUMBER: builtins.int
    id: builtins.str
    mark_name: builtins.str
    goods_and_services: builtins.str
    reference_number: builtins.str
    title: builtins.str
    @property
    def holders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Holder]: ...
    @property
    def contacts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Contact]: ...
    @property
    def protections(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Protection]: ...
    @property
    def labels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def protection_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def execution_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        mark_name: builtins.str = ...,
        holders: collections.abc.Iterable[global___Holder] | None = ...,
        contacts: collections.abc.Iterable[global___Contact] | None = ...,
        protections: collections.abc.Iterable[global___Protection] | None = ...,
        labels: collections.abc.Iterable[builtins.str] | None = ...,
        goods_and_services: builtins.str = ...,
        reference_number: builtins.str = ...,
        protection_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        title: builtins.str = ...,
        execution_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["execution_date", b"execution_date", "protection_date", b"protection_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["contacts", b"contacts", "execution_date", b"execution_date", "goods_and_services", b"goods_and_services", "holders", b"holders", "id", b"id", "labels", b"labels", "mark_name", b"mark_name", "protection_date", b"protection_date", "protections", b"protections", "reference_number", b"reference_number", "title", b"title"]) -> None: ...

global___TreatyOrStatute = TreatyOrStatute

@typing.final
class Protection(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COUNTRY_CODE_FIELD_NUMBER: builtins.int
    REGION_FIELD_NUMBER: builtins.int
    RULING_FIELD_NUMBER: builtins.int
    country_code: builtins.str
    @property
    def region(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def ruling(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        country_code: builtins.str = ...,
        region: google.protobuf.wrappers_pb2.StringValue | None = ...,
        ruling: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["region", b"region"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["country_code", b"country_code", "region", b"region", "ruling", b"ruling"]) -> None: ...

global___Protection = Protection

@typing.final
class Court(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    MARK_NAME_FIELD_NUMBER: builtins.int
    HOLDERS_FIELD_NUMBER: builtins.int
    CONTACTS_FIELD_NUMBER: builtins.int
    LABELS_FIELD_NUMBER: builtins.int
    GOODS_AND_SERVICES_FIELD_NUMBER: builtins.int
    REFERENCE_NUMBER_FIELD_NUMBER: builtins.int
    PROTECTION_DATE_FIELD_NUMBER: builtins.int
    COUNTRY_CODE_FIELD_NUMBER: builtins.int
    REGIONS_FIELD_NUMBER: builtins.int
    COURT_NAME_FIELD_NUMBER: builtins.int
    id: builtins.str
    mark_name: builtins.str
    goods_and_services: builtins.str
    reference_number: builtins.str
    country_code: builtins.str
    court_name: builtins.str
    @property
    def holders(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Holder]: ...
    @property
    def contacts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Contact]: ...
    @property
    def labels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def protection_date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def regions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        mark_name: builtins.str = ...,
        holders: collections.abc.Iterable[global___Holder] | None = ...,
        contacts: collections.abc.Iterable[global___Contact] | None = ...,
        labels: collections.abc.Iterable[builtins.str] | None = ...,
        goods_and_services: builtins.str = ...,
        reference_number: builtins.str = ...,
        protection_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        country_code: builtins.str = ...,
        regions: collections.abc.Iterable[builtins.str] | None = ...,
        court_name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["protection_date", b"protection_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["contacts", b"contacts", "country_code", b"country_code", "court_name", b"court_name", "goods_and_services", b"goods_and_services", "holders", b"holders", "id", b"id", "labels", b"labels", "mark_name", b"mark_name", "protection_date", b"protection_date", "reference_number", b"reference_number", "regions", b"regions"]) -> None: ...

global___Court = Court

@typing.final
class Holder(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ORGANISATION_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    VOICE_FIELD_NUMBER: builtins.int
    FAX_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    ENTITLEMENT_FIELD_NUMBER: builtins.int
    entitlement: global___Entitlement.ValueType
    @property
    def name(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def organisation(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def address(self) -> global___Address: ...
    @property
    def voice(self) -> common.common_pb2.Phone: ...
    @property
    def fax(self) -> common.common_pb2.Phone: ...
    @property
    def email(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    def __init__(
        self,
        *,
        name: google.protobuf.wrappers_pb2.StringValue | None = ...,
        organisation: google.protobuf.wrappers_pb2.StringValue | None = ...,
        address: global___Address | None = ...,
        voice: common.common_pb2.Phone | None = ...,
        fax: common.common_pb2.Phone | None = ...,
        email: google.protobuf.wrappers_pb2.StringValue | None = ...,
        entitlement: global___Entitlement.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["address", b"address", "email", b"email", "fax", b"fax", "name", b"name", "organisation", b"organisation", "voice", b"voice"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["address", b"address", "email", b"email", "entitlement", b"entitlement", "fax", b"fax", "name", b"name", "organisation", b"organisation", "voice", b"voice"]) -> None: ...

global___Holder = Holder

@typing.final
class Contact(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ORGANISATION_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    VOICE_FIELD_NUMBER: builtins.int
    FAX_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    CONTACT_TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    email: builtins.str
    contact_type: global___ContactType.ValueType
    @property
    def organisation(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def address(self) -> global___Address: ...
    @property
    def voice(self) -> common.common_pb2.Phone: ...
    @property
    def fax(self) -> common.common_pb2.Phone: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        organisation: google.protobuf.wrappers_pb2.StringValue | None = ...,
        address: global___Address | None = ...,
        voice: common.common_pb2.Phone | None = ...,
        fax: common.common_pb2.Phone | None = ...,
        email: builtins.str = ...,
        contact_type: global___ContactType.ValueType = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["address", b"address", "fax", b"fax", "organisation", b"organisation", "voice", b"voice"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["address", b"address", "contact_type", b"contact_type", "email", b"email", "fax", b"fax", "name", b"name", "organisation", b"organisation", "voice", b"voice"]) -> None: ...

global___Contact = Contact

@typing.final
class Address(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STREET1_FIELD_NUMBER: builtins.int
    STREET2_FIELD_NUMBER: builtins.int
    STREET3_FIELD_NUMBER: builtins.int
    CITY_FIELD_NUMBER: builtins.int
    PROVINCE_FIELD_NUMBER: builtins.int
    POSTAL_CODE_FIELD_NUMBER: builtins.int
    COUNTRY_CODE_FIELD_NUMBER: builtins.int
    city: builtins.str
    country_code: builtins.str
    @property
    def street1(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def street2(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def street3(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def province(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    @property
    def postal_code(self) -> google.protobuf.wrappers_pb2.StringValue: ...
    def __init__(
        self,
        *,
        street1: google.protobuf.wrappers_pb2.StringValue | None = ...,
        street2: google.protobuf.wrappers_pb2.StringValue | None = ...,
        street3: google.protobuf.wrappers_pb2.StringValue | None = ...,
        city: builtins.str = ...,
        province: google.protobuf.wrappers_pb2.StringValue | None = ...,
        postal_code: google.protobuf.wrappers_pb2.StringValue | None = ...,
        country_code: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["postal_code", b"postal_code", "province", b"province", "street1", b"street1", "street2", b"street2", "street3", b"street3"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["city", b"city", "country_code", b"country_code", "postal_code", b"postal_code", "province", b"province", "street1", b"street1", "street2", b"street2", "street3", b"street3"]) -> None: ...

global___Address = Address
