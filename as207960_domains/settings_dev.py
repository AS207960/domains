"""
Django settings for as207960_domains project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import logging
import json

from django_countries.widgets import LazyChoicesMixin

LazyChoicesMixin.get_choices = lambda self: self._choices
LazyChoicesMixin.choices = property(LazyChoicesMixin.get_choices, LazyChoicesMixin.set_choices)

logging.basicConfig(level=logging.INFO)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2!ma5g##@c@p!erb#bi25i*ic1-iqr&hwxh0(w7%lgfqb^i5ye'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["localhost", "45.129.95.4", "as207960-domains.eu.ngrok.io"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django_keycloak_auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.postgres',
    'phonenumber_field',
    'crispy_forms',
    'django_countries',
    'django_grpc',
    'rest_framework',
    'crispy_bootstrap5',
    'domains'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "django_keycloak_auth.middleware.OIDCMiddleware",
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'domains.middleware.CountryDummyMiddleware',
]

ROOT_URLCONF = 'as207960_domains.urls'

AUTHENTICATION_BACKENDS = ["django_keycloak_auth.auth.KeycloakAuthorization"]

LOGIN_URL = "oidc_login"
LOGOUT_REDIRECT_URL = "oidc_login"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'as207960_domains.wsgi.application'

GRPCSERVER = {
    'servicers': ['domains.rdap.grpc_hook'],
    'maximum_concurrent_rpcs': None,
}

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        "ENGINE": "django.db.backends.postgresql",
#        "HOST": "localhost",
        "NAME": "as207960_domains",
        "USER": "postgres",
#        "PASSWORD": "",
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
EXTERNAL_URL_BASE = "http://localhost:8000"
RP_ID = "as207960-domains.eu.ngrok.io"

PHONENUMBER_DEFAULT_REGION = "GB"
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
CRISPY_FAIL_SILENTLY = not DEBUG

GCHAT_SERVICE_ACCOUNT = os.path.join(BASE_DIR, "secrets/Domain Registration-24045e71a81b.json")
GCHAT_PROJECT_ID = '226795660453'

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
DEFAULT_FROM_EMAIL = "AS207960 Domains <domains@as207960.net>"

with open(os.path.join(BASE_DIR, "secrets/keycloak.json")) as f:
    keycloak_conf = json.load(f)

with open(os.path.join(BASE_DIR, "secrets/verisign_ns.json")) as f:
    verisign_ns_conf = json.load(f)

with open(os.path.join(BASE_DIR, "secrets/rrpproxy.json")) as f:
    rrproxy_conf = json.load(f)

with open(os.path.join(BASE_DIR, "secrets/switch.json")) as f:
    switch_conf = json.load(f)

with open(os.path.join(BASE_DIR, "secrets/jwt_priv.pem")) as f:
    JWT_PRIV_KEY = f.read()

KEYCLOAK_SERVER_URL = keycloak_conf["server_url"]
KEYCLOAK_REALM = keycloak_conf["realm"]
OIDC_CLIENT_ID = keycloak_conf["client_id"]
OIDC_CLIENT_SECRET = keycloak_conf["client_secret"]
OIDC_SCOPES = keycloak_conf["scopes"]

VERISIGN_NS_API_KEY = verisign_ns_conf["key"]

REGISTRATION_ENABLED = True
REGISTRY_LOCK_ENABLED = True
EPP_PROXY_ADDR = "localhost:50052"
EPP_PROXY_CA = "../epp-proxy/priv/secrets/grpc.pem"

BILLING_URL = "http://localhost:8001"
HEXDNS_URL = "http://localhost:8002"
FEEDBACK_URL = "none"
# FEEDBACK_URL = "http://localhost:8003"
PAT_URL = "http://localhost:8004"

RRPPROXY_USER = rrproxy_conf["user"]
RRPPROXY_PASS = rrproxy_conf["pass"]

RESOLVER_ADDR = "2a0d:1a40:7900::2"
RESOLVER_PORT = 53

RABBITMQ_RPC_URL = "amqp://guest:guest@localhost:5672/rpc"

POSTAL_PUBLIC_KEY = \
    "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQChELn1Fkauo6bduyGeXNca/z27OYNMd85JZMlNiycfFHaAXzgPd53OKVSbyzBuILFPYmzkfaF" \
    "uOCW2qgvFd8cAye6qLsUAqEetiuRTPpAysX3hss1TqIML51kb0ADTmylKi3Hr553qrDy9AEMFmvaKnTH8o0YFozGk0QtlmiLtXQIDAQAB"

ISNIC_CONTACT_EMAIL = "isnic-auto-ote@as207960.ltd.uk"
RDAP_OBJECT_TAG = "GLAUCA"

AFNIC_PROXY_CONTACT = "O-ASN34"
EURID_PROXY_CONTACT = "c41743909"

SWITCH_REGISTRAR_ID = switch_conf["id"]
SWITCH_REGISTRAR_PASSWORD = switch_conf["password"]

LISTMONK_TEMPLATE_ID = 3
LISTMONK_URL = "https://listmonk.as207960.net"

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'as207960_utils.api.auth.BearerAuthentication',
        'as207960_utils.api.auth.PATAuthentication',
        'as207960_utils.api.auth.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'EXCEPTION_HANDLER': 'domains.api.exceptions.exception_handler',
    'PAGE_SIZE': 100
}

LOGGING = {
    'version': 1,
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        }
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
        }
    },
    'loggers': {
        'django.db.backends': {
            'level': 'INFO',
            'handlers': ['console'],
        }
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'